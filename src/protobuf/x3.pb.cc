// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/x3.proto

#include "proto/x3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fx3_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Attributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CharArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Check;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Command;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DBResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Enable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Frame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Image;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LogLevel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Status;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Threshold;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Box;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Capability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CaptureFrameMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FloatMatrix;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Points;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SmartFrameMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StatisticsMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Addition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CaptureTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Config;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Capture;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fx3_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_Target;
}  // namespace protobuf_proto_2fx3_2eproto
namespace x3 {
class CharArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharArray>
      _instance;
} _CharArray_default_instance_;
class FloatArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatArray>
      _instance;
} _FloatArray_default_instance_;
class FloatMatrixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatMatrix>
      _instance;
} _FloatMatrix_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class PointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Points>
      _instance;
} _Points_default_instance_;
class BoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Box>
      _instance;
} _Box_default_instance_;
class AttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes>
      _instance;
} _Attributes_default_instance_;
class DBResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBResult>
      _instance;
} _DBResult_default_instance_;
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class EnableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Enable>
      _instance;
} _Enable_default_instance_;
class ThresholdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Threshold>
      _instance;
} _Threshold_default_instance_;
class ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mode>
      _instance;
} _Mode_default_instance_;
class TargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Target>
      _instance;
} _Target_default_instance_;
class SmartFrameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SmartFrameMessage>
      _instance;
} _SmartFrameMessage_default_instance_;
class CaptureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Capture>
      _instance;
} _Capture_default_instance_;
class CaptureTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CaptureTarget>
      _instance;
} _CaptureTarget_default_instance_;
class CaptureFrameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CaptureFrameMessage>
      _instance;
} _CaptureFrameMessage_default_instance_;
class StatisticsMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatisticsMessage>
      _instance;
} _StatisticsMessage_default_instance_;
class FrameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameMessage>
      _instance;
} _FrameMessage_default_instance_;
class CapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Capability>
      _instance;
} _Capability_default_instance_;
class VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version>
      _instance;
} _Version_default_instance_;
class ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config>
      _instance;
} _Config_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Status>
      _instance;
} _Status_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
class LogLevelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogLevel>
      _instance;
} _LogLevel_default_instance_;
class InfoMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoMessage>
      _instance;
} _InfoMessage_default_instance_;
class FrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Frame>
      _instance;
} _Frame_default_instance_;
class CheckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Check>
      _instance;
} _Check_default_instance_;
class AdditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Addition>
      _instance;
} _Addition_default_instance_;
class MessagePackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessagePack>
      _instance;
} _MessagePack_default_instance_;
}  // namespace x3
namespace protobuf_proto_2fx3_2eproto {
static void InitDefaultsCharArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_CharArray_default_instance_;
    new (ptr) ::x3::CharArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::CharArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CharArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCharArray}, {}};

static void InitDefaultsFloatArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_FloatArray_default_instance_;
    new (ptr) ::x3::FloatArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::FloatArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FloatArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloatArray}, {}};

static void InitDefaultsFloatMatrix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_FloatMatrix_default_instance_;
    new (ptr) ::x3::FloatMatrix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::FloatMatrix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FloatMatrix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFloatMatrix}, {
      &protobuf_proto_2fx3_2eproto::scc_info_FloatArray.base,}};

static void InitDefaultsPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Point_default_instance_;
    new (ptr) ::x3::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint}, {}};

static void InitDefaultsPoints() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Points_default_instance_;
    new (ptr) ::x3::Points();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Points::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Points =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPoints}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Point.base,}};

static void InitDefaultsBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Box_default_instance_;
    new (ptr) ::x3::Box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBox}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Point.base,}};

static void InitDefaultsAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Attributes_default_instance_;
    new (ptr) ::x3::Attributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Attributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Attributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttributes}, {}};

static void InitDefaultsDBResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_DBResult_default_instance_;
    new (ptr) ::x3::DBResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::DBResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DBResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDBResult}, {}};

static void InitDefaultsImage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Image_default_instance_;
    new (ptr) ::x3::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Image::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Image =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImage}, {}};

static void InitDefaultsEnable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Enable_default_instance_;
    new (ptr) ::x3::Enable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Enable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Enable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnable}, {}};

static void InitDefaultsThreshold() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Threshold_default_instance_;
    new (ptr) ::x3::Threshold();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Threshold::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Threshold =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsThreshold}, {}};

static void InitDefaultsMode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Mode_default_instance_;
    new (ptr) ::x3::Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Mode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mode =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMode}, {}};

static void InitDefaultsTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Target_default_instance_;
    new (ptr) ::x3::Target();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Target::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_Target =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsTarget}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Image.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Box.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Attributes.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Points.base,
      &protobuf_proto_2fx3_2eproto::scc_info_FloatArray.base,
      &protobuf_proto_2fx3_2eproto::scc_info_FloatMatrix.base,
      &protobuf_proto_2fx3_2eproto::scc_info_CharArray.base,}};

static void InitDefaultsSmartFrameMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_SmartFrameMessage_default_instance_;
    new (ptr) ::x3::SmartFrameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::SmartFrameMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SmartFrameMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSmartFrameMessage}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Target.base,}};

static void InitDefaultsCapture() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Capture_default_instance_;
    new (ptr) ::x3::Capture();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Capture::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Capture =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsCapture}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Image.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Box.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Attributes.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Points.base,
      &protobuf_proto_2fx3_2eproto::scc_info_FloatArray.base,
      &protobuf_proto_2fx3_2eproto::scc_info_CharArray.base,}};

static void InitDefaultsCaptureTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_CaptureTarget_default_instance_;
    new (ptr) ::x3::CaptureTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::CaptureTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CaptureTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCaptureTarget}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Capture.base,
      &protobuf_proto_2fx3_2eproto::scc_info_DBResult.base,}};

static void InitDefaultsCaptureFrameMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_CaptureFrameMessage_default_instance_;
    new (ptr) ::x3::CaptureFrameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::CaptureFrameMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CaptureFrameMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCaptureFrameMessage}, {
      &protobuf_proto_2fx3_2eproto::scc_info_CaptureTarget.base,}};

static void InitDefaultsStatisticsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_StatisticsMessage_default_instance_;
    new (ptr) ::x3::StatisticsMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::StatisticsMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StatisticsMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStatisticsMessage}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Attributes.base,}};

static void InitDefaultsFrameMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_FrameMessage_default_instance_;
    new (ptr) ::x3::FrameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::FrameMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_FrameMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsFrameMessage}, {
      &protobuf_proto_2fx3_2eproto::scc_info_SmartFrameMessage.base,
      &protobuf_proto_2fx3_2eproto::scc_info_CaptureFrameMessage.base,
      &protobuf_proto_2fx3_2eproto::scc_info_StatisticsMessage.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Image.base,}};

static void InitDefaultsCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Capability_default_instance_;
    new (ptr) ::x3::Capability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Capability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Capability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCapability}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Enable.base,}};

static void InitDefaultsVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Version_default_instance_;
    new (ptr) ::x3::Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Version =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersion}, {}};

static void InitDefaultsConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Config_default_instance_;
    new (ptr) ::x3::Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsConfig}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Threshold.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Mode.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Box.base,}};

static void InitDefaultsStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Status_default_instance_;
    new (ptr) ::x3::Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatus}, {}};

static void InitDefaultsCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Command_default_instance_;
    new (ptr) ::x3::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Command::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Command =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCommand}, {}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Response_default_instance_;
    new (ptr) ::x3::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse}, {}};

static void InitDefaultsLogLevel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_LogLevel_default_instance_;
    new (ptr) ::x3::LogLevel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::LogLevel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogLevel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogLevel}, {}};

static void InitDefaultsInfoMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_InfoMessage_default_instance_;
    new (ptr) ::x3::InfoMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::InfoMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_InfoMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsInfoMessage}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Status.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Command.base,
      &protobuf_proto_2fx3_2eproto::scc_info_LogLevel.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Response.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Config.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Version.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Capability.base,}};

static void InitDefaultsFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Frame_default_instance_;
    new (ptr) ::x3::Frame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Frame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Frame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFrame}, {}};

static void InitDefaultsCheck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Check_default_instance_;
    new (ptr) ::x3::Check();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Check::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Check =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheck}, {}};

static void InitDefaultsAddition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_Addition_default_instance_;
    new (ptr) ::x3::Addition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::Addition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Addition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddition}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Check.base,
      &protobuf_proto_2fx3_2eproto::scc_info_Frame.base,}};

static void InitDefaultsMessagePack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::x3::_MessagePack_default_instance_;
    new (ptr) ::x3::MessagePack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::x3::MessagePack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessagePack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessagePack}, {
      &protobuf_proto_2fx3_2eproto::scc_info_Addition.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CharArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatMatrix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Points.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DBResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Image.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Enable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Threshold.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Target.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SmartFrameMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Capture.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CaptureTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CaptureFrameMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatisticsMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Capability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Version.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Config.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Command.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogLevel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Frame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Check.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Addition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessagePack.base);
}

}  // namespace protobuf_proto_2fx3_2eproto
namespace x3 {
bool Status_RunStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Status_RunStatus Status::Uknown;
const Status_RunStatus Status::Uninit;
const Status_RunStatus Status::Init;
const Status_RunStatus Status::Normal;
const Status_RunStatus Status::Abnormal;
const Status_RunStatus Status::Update;
const Status_RunStatus Status::RunStatus_MIN;
const Status_RunStatus Status::RunStatus_MAX;
const int Status::RunStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Command_Order_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Command_Order Command::Unkown;
const Command_Order Command::StartX2;
const Command_Order Command::StopX2;
const Command_Order Command::UpdateX2;
const Command_Order Command::Order_MIN;
const Command_Order Command::Order_MAX;
const int Command::Order_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Response_Ack_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Response_Ack Response::Uknown;
const Response_Ack Response::Success;
const Response_Ack Response::Fail;
const Response_Ack Response::Ack_MIN;
const Response_Ack Response::Ack_MAX;
const int Response::Ack_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool LogLevel_Level_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LogLevel_Level LogLevel::X2_DEBUG;
const LogLevel_Level LogLevel::X2_INFO;
const LogLevel_Level LogLevel::X2_NOTICE;
const LogLevel_Level LogLevel::X2_WARN;
const LogLevel_Level LogLevel::X2_ERROR;
const LogLevel_Level LogLevel::X2_FATAL;
const LogLevel_Level LogLevel::X2_NONE;
const LogLevel_Level LogLevel::Level_MIN;
const LogLevel_Level LogLevel::Level_MAX;
const int LogLevel::Level_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool Frame_FrameType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Frame_FrameType Frame::Unkown;
const Frame_FrameType Frame::SmartFrame;
const Frame_FrameType Frame::DropFrame;
const Frame_FrameType Frame::ErrorFrame;
const Frame_FrameType Frame::FrameType_MIN;
const Frame_FrameType Frame::FrameType_MAX;
const int Frame::FrameType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool MessagePack_Flow_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessagePack_Flow MessagePack::Unknown;
const MessagePack_Flow MessagePack::AP2CP;
const MessagePack_Flow MessagePack::CP2AP;
const MessagePack_Flow MessagePack::Flow_MIN;
const MessagePack_Flow MessagePack::Flow_MAX;
const int MessagePack::Flow_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
bool MessagePack_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessagePack_Type MessagePack::kUnknown;
const MessagePack_Type MessagePack::kXPlugin;
const MessagePack_Type MessagePack::kXConfig;
const MessagePack_Type MessagePack::Type_MIN;
const MessagePack_Type MessagePack::Type_MAX;
const int MessagePack::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CharArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharArray::kTypeFieldNumber;
const int CharArray::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharArray::CharArray()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_CharArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.CharArray)
}
CharArray::CharArray(const CharArray& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  array__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.array_().size() > 0) {
    array__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.array__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.CharArray)
}

void CharArray::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CharArray::~CharArray() {
  // @@protoc_insertion_point(destructor:x3.CharArray)
  SharedDtor();
}

void CharArray::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CharArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharArray& CharArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_CharArray.base);
  return *internal_default_instance();
}


void CharArray::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.CharArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  array__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CharArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.CharArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.CharArray.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes array_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_array_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.CharArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.CharArray)
  return false;
#undef DO_
}

void CharArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.CharArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.CharArray.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // bytes array_ = 2;
  if (this->array_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->array_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.CharArray)
}

size_t CharArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.CharArray)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // bytes array_ = 2;
  if (this->array_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->array_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CharArray*>(&from));
}

void CharArray::MergeFrom(const CharArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.CharArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.array_().size() > 0) {

    array__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.array__);
  }
}

void CharArray::CopyFrom(const CharArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.CharArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharArray::IsInitialized() const {
  return true;
}

void CharArray::Swap(CharArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharArray::InternalSwap(CharArray* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  array__.Swap(&other->array__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CharArray::GetTypeName() const {
  return "x3.CharArray";
}


// ===================================================================

void FloatArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatArray::kTypeFieldNumber;
const int FloatArray::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatArray::FloatArray()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_FloatArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.FloatArray)
}
FloatArray::FloatArray(const FloatArray& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      value__(from.value__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.FloatArray)
}

void FloatArray::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FloatArray::~FloatArray() {
  // @@protoc_insertion_point(destructor:x3.FloatArray)
  SharedDtor();
}

void FloatArray::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FloatArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FloatArray& FloatArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_FloatArray.base);
  return *internal_default_instance();
}


void FloatArray::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.FloatArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FloatArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.FloatArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.FloatArray.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_value_())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_value_())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.FloatArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.FloatArray)
  return false;
#undef DO_
}

void FloatArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.FloatArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.FloatArray.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated float value_ = 2;
  if (this->value__size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value__cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->value_().data(), this->value__size(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.FloatArray)
}

size_t FloatArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.FloatArray)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated float value_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->value__size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value__cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatArray::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FloatArray*>(&from));
}

void FloatArray::MergeFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.FloatArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value__.MergeFrom(from.value__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void FloatArray::CopyFrom(const FloatArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.FloatArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatArray::IsInitialized() const {
  return true;
}

void FloatArray::Swap(FloatArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatArray::InternalSwap(FloatArray* other) {
  using std::swap;
  value__.InternalSwap(&other->value__);
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FloatArray::GetTypeName() const {
  return "x3.FloatArray";
}


// ===================================================================

void FloatMatrix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatMatrix::kTypeFieldNumber;
const int FloatMatrix::kArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatMatrix::FloatMatrix()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_FloatMatrix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.FloatMatrix)
}
FloatMatrix::FloatMatrix(const FloatMatrix& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      arrays__(from.arrays__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.FloatMatrix)
}

void FloatMatrix::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FloatMatrix::~FloatMatrix() {
  // @@protoc_insertion_point(destructor:x3.FloatMatrix)
  SharedDtor();
}

void FloatMatrix::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FloatMatrix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FloatMatrix& FloatMatrix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_FloatMatrix.base);
  return *internal_default_instance();
}


void FloatMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.FloatMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrays__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FloatMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.FloatMatrix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.FloatMatrix.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.FloatArray arrays_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.FloatMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.FloatMatrix)
  return false;
#undef DO_
}

void FloatMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.FloatMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.FloatMatrix.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x3.FloatArray arrays_ = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->arrays_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.FloatMatrix)
}

size_t FloatMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.FloatMatrix)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.FloatArray arrays_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrays_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatMatrix::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FloatMatrix*>(&from));
}

void FloatMatrix::MergeFrom(const FloatMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.FloatMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrays__.MergeFrom(from.arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void FloatMatrix::CopyFrom(const FloatMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.FloatMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatMatrix::IsInitialized() const {
  return true;
}

void FloatMatrix::Swap(FloatMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatMatrix::InternalSwap(FloatMatrix* other) {
  using std::swap;
  CastToBase(&arrays__)->InternalSwap(CastToBase(&other->arrays__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FloatMatrix::GetTypeName() const {
  return "x3.FloatMatrix";
}


// ===================================================================

void Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
const int Point::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x__, &from.x__,
    static_cast<size_t>(reinterpret_cast<char*>(&score__) -
    reinterpret_cast<char*>(&x__)) + sizeof(score__));
  // @@protoc_insertion_point(copy_constructor:x3.Point)
}

void Point::SharedCtor() {
  ::memset(&x__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&x__)) + sizeof(score__));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:x3.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Point.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&x__)) + sizeof(score__));
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x_ = 1;
  if (this->x_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_(), output);
  }

  // float y_ = 2;
  if (this->y_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y_(), output);
  }

  // float score_ = 3;
  if (this->score_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->score_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Point)
}

size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Point)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // float x_ = 1;
  if (this->x_() != 0) {
    total_size += 1 + 4;
  }

  // float y_ = 2;
  if (this->y_() != 0) {
    total_size += 1 + 4;
  }

  // float score_ = 3;
  if (this->score_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Point*>(&from));
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x_() != 0) {
    set_x_(from.x_());
  }
  if (from.y_() != 0) {
    set_y_(from.y_());
  }
  if (from.score_() != 0) {
    set_score_(from.score_());
  }
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x__, other->x__);
  swap(y__, other->y__);
  swap(score__, other->score__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Point::GetTypeName() const {
  return "x3.Point";
}


// ===================================================================

void Points::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Points::kTypeFieldNumber;
const int Points::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Points::Points()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Points.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Points)
}
Points::Points(const Points& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      points__(from.points__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.Points)
}

void Points::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Points::~Points() {
  // @@protoc_insertion_point(destructor:x3.Points)
  SharedDtor();
}

void Points::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Points::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Points& Points::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Points.base);
  return *internal_default_instance();
}


void Points::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Points::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Points)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Points.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Point points_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Points)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Points)
  return false;
#undef DO_
}

void Points::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Points)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Points.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x3.Point points_ = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->points_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Points)
}

size_t Points::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Points)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Point points_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->points__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Points::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Points*>(&from));
}

void Points::MergeFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Points)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points__.MergeFrom(from.points__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void Points::CopyFrom(const Points& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Points)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Points::IsInitialized() const {
  return true;
}

void Points::Swap(Points* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Points::InternalSwap(Points* other) {
  using std::swap;
  CastToBase(&points__)->InternalSwap(CastToBase(&other->points__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Points::GetTypeName() const {
  return "x3.Points";
}


// ===================================================================

void Box::InitAsDefaultInstance() {
  ::x3::_Box_default_instance_._instance.get_mutable()->top_left__ = const_cast< ::x3::Point*>(
      ::x3::Point::internal_default_instance());
  ::x3::_Box_default_instance_._instance.get_mutable()->bottom_right__ = const_cast< ::x3::Point*>(
      ::x3::Point::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Box::kTypeFieldNumber;
const int Box::kTopLeftFieldNumber;
const int Box::kBottomRightFieldNumber;
const int Box::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Box::Box()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Box)
}
Box::Box(const Box& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_top_left_()) {
    top_left__ = new ::x3::Point(*from.top_left__);
  } else {
    top_left__ = NULL;
  }
  if (from.has_bottom_right_()) {
    bottom_right__ = new ::x3::Point(*from.bottom_right__);
  } else {
    bottom_right__ = NULL;
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:x3.Box)
}

void Box::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&top_left__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&top_left__)) + sizeof(score_));
}

Box::~Box() {
  // @@protoc_insertion_point(destructor:x3.Box)
  SharedDtor();
}

void Box::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete top_left__;
  if (this != internal_default_instance()) delete bottom_right__;
}

void Box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Box& Box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Box.base);
  return *internal_default_instance();
}


void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && top_left__ != NULL) {
    delete top_left__;
  }
  top_left__ = NULL;
  if (GetArenaNoVirtual() == NULL && bottom_right__ != NULL) {
    delete bottom_right__;
  }
  bottom_right__ = NULL;
  score_ = 0;
  _internal_metadata_.Clear();
}

bool Box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Box.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Point top_left_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_top_left_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Point bottom_right_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bottom_right_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Box)
  return false;
#undef DO_
}

void Box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Box.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // .x3.Point top_left_ = 2;
  if (this->has_top_left_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_top_left_(), output);
  }

  // .x3.Point bottom_right_ = 3;
  if (this->has_bottom_right_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_bottom_right_(), output);
  }

  // float score = 4;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->score(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Box)
}

size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Box)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // .x3.Point top_left_ = 2;
  if (this->has_top_left_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *top_left__);
  }

  // .x3.Point bottom_right_ = 3;
  if (this->has_bottom_right_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bottom_right__);
  }

  // float score = 4;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Box::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Box*>(&from));
}

void Box::MergeFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_top_left_()) {
    mutable_top_left_()->::x3::Point::MergeFrom(from.top_left_());
  }
  if (from.has_bottom_right_()) {
    mutable_bottom_right_()->::x3::Point::MergeFrom(from.bottom_right_());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Box::IsInitialized() const {
  return true;
}

void Box::Swap(Box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Box::InternalSwap(Box* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(top_left__, other->top_left__);
  swap(bottom_right__, other->bottom_right__);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Box::GetTypeName() const {
  return "x3.Box";
}


// ===================================================================

void Attributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes::kTypeFieldNumber;
const int Attributes::kValueFieldNumber;
const int Attributes::kValueStringFieldNumber;
const int Attributes::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes::Attributes()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Attributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Attributes)
}
Attributes::Attributes(const Attributes& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  value_string__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_string_().size() > 0) {
    value_string__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_string__);
  }
  ::memcpy(&value__, &from.value__,
    static_cast<size_t>(reinterpret_cast<char*>(&score__) -
    reinterpret_cast<char*>(&value__)) + sizeof(score__));
  // @@protoc_insertion_point(copy_constructor:x3.Attributes)
}

void Attributes::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_string__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&value__)) + sizeof(score__));
}

Attributes::~Attributes() {
  // @@protoc_insertion_point(destructor:x3.Attributes)
  SharedDtor();
}

void Attributes::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_string__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Attributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Attributes& Attributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Attributes.base);
  return *internal_default_instance();
}


void Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_string__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score__) -
      reinterpret_cast<char*>(&value__)) + sizeof(score__));
  _internal_metadata_.Clear();
}

bool Attributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Attributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Attributes.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_string_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_string_().data(), static_cast<int>(this->value_string_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Attributes.value_string_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Attributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Attributes)
  return false;
#undef DO_
}

void Attributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Attributes.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // float value_ = 2;
  if (this->value_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value_(), output);
  }

  // string value_string_ = 3;
  if (this->value_string_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_string_().data(), static_cast<int>(this->value_string_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Attributes.value_string_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value_string_(), output);
  }

  // float score_ = 4;
  if (this->score_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->score_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Attributes)
}

size_t Attributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Attributes)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // string value_string_ = 3;
  if (this->value_string_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_string_());
  }

  // float value_ = 2;
  if (this->value_() != 0) {
    total_size += 1 + 4;
  }

  // float score_ = 4;
  if (this->score_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attributes::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Attributes*>(&from));
}

void Attributes::MergeFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_string_().size() > 0) {

    value_string__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_string__);
  }
  if (from.value_() != 0) {
    set_value_(from.value_());
  }
  if (from.score_() != 0) {
    set_score_(from.score_());
  }
}

void Attributes::CopyFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {
  return true;
}

void Attributes::Swap(Attributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attributes::InternalSwap(Attributes* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_string__.Swap(&other->value_string__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value__, other->value__);
  swap(score__, other->score__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Attributes::GetTypeName() const {
  return "x3.Attributes";
}


// ===================================================================

void DBResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBResult::kDbTypeFieldNumber;
const int DBResult::kMatchIdFieldNumber;
const int DBResult::kDistanceFieldNumber;
const int DBResult::kSimilarityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBResult::DBResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_DBResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.DBResult)
}
DBResult::DBResult(const DBResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_type_().size() > 0) {
    db_type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_type__);
  }
  match_id__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.match_id_().size() > 0) {
    match_id__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_id__);
  }
  ::memcpy(&distance__, &from.distance__,
    static_cast<size_t>(reinterpret_cast<char*>(&similarity__) -
    reinterpret_cast<char*>(&distance__)) + sizeof(similarity__));
  // @@protoc_insertion_point(copy_constructor:x3.DBResult)
}

void DBResult::SharedCtor() {
  db_type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&distance__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&similarity__) -
      reinterpret_cast<char*>(&distance__)) + sizeof(similarity__));
}

DBResult::~DBResult() {
  // @@protoc_insertion_point(destructor:x3.DBResult)
  SharedDtor();
}

void DBResult::SharedDtor() {
  db_type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DBResult& DBResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_DBResult.base);
  return *internal_default_instance();
}


void DBResult::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.DBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  db_type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  match_id__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&distance__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&similarity__) -
      reinterpret_cast<char*>(&distance__)) + sizeof(similarity__));
  _internal_metadata_.Clear();
}

bool DBResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.DBResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_type_().data(), static_cast<int>(this->db_type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.DBResult.db_type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string match_id_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_match_id_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->match_id_().data(), static_cast<int>(this->match_id_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.DBResult.match_id_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float distance_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float similarity_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &similarity__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.DBResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.DBResult)
  return false;
#undef DO_
}

void DBResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.DBResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_type_ = 1;
  if (this->db_type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_type_().data(), static_cast<int>(this->db_type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.DBResult.db_type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_type_(), output);
  }

  // string match_id_ = 2;
  if (this->match_id_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->match_id_().data(), static_cast<int>(this->match_id_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.DBResult.match_id_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->match_id_(), output);
  }

  // float distance_ = 3;
  if (this->distance_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance_(), output);
  }

  // float similarity_ = 4;
  if (this->similarity_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->similarity_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.DBResult)
}

size_t DBResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.DBResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string db_type_ = 1;
  if (this->db_type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_type_());
  }

  // string match_id_ = 2;
  if (this->match_id_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->match_id_());
  }

  // float distance_ = 3;
  if (this->distance_() != 0) {
    total_size += 1 + 4;
  }

  // float similarity_ = 4;
  if (this->similarity_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DBResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DBResult*>(&from));
}

void DBResult::MergeFrom(const DBResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.DBResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.db_type_().size() > 0) {

    db_type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_type__);
  }
  if (from.match_id_().size() > 0) {

    match_id__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.match_id__);
  }
  if (from.distance_() != 0) {
    set_distance_(from.distance_());
  }
  if (from.similarity_() != 0) {
    set_similarity_(from.similarity_());
  }
}

void DBResult::CopyFrom(const DBResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.DBResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBResult::IsInitialized() const {
  return true;
}

void DBResult::Swap(DBResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBResult::InternalSwap(DBResult* other) {
  using std::swap;
  db_type__.Swap(&other->db_type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  match_id__.Swap(&other->match_id__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(distance__, other->distance__);
  swap(similarity__, other->similarity__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string DBResult::GetTypeName() const {
  return "x3.DBResult";
}


// ===================================================================

void Image::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kBufFieldNumber;
const int Image::kTypeFieldNumber;
const int Image::kWidthFieldNumber;
const int Image::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Image.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buf_().size() > 0) {
    buf__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf__);
  }
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  ::memcpy(&width__, &from.width__,
    static_cast<size_t>(reinterpret_cast<char*>(&height__) -
    reinterpret_cast<char*>(&width__)) + sizeof(height__));
  // @@protoc_insertion_point(copy_constructor:x3.Image)
}

void Image::SharedCtor() {
  buf__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height__) -
      reinterpret_cast<char*>(&width__)) + sizeof(height__));
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:x3.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  buf__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Image& Image::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Image.base);
  return *internal_default_instance();
}


void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height__) -
      reinterpret_cast<char*>(&width__)) + sizeof(height__));
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Image)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes buf_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Image.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buf_ = 1;
  if (this->buf_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf_(), output);
  }

  // string type_ = 2;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Image.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_(), output);
  }

  // uint32 width_ = 3;
  if (this->width_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width_(), output);
  }

  // uint32 height_ = 4;
  if (this->height_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Image)
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Image)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes buf_ = 1;
  if (this->buf_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf_());
  }

  // string type_ = 2;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint32 width_ = 3;
  if (this->width_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width_());
  }

  // uint32 height_ = 4;
  if (this->height_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Image::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Image*>(&from));
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buf_().size() > 0) {

    buf__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf__);
  }
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.width_() != 0) {
    set_width_(from.width_());
  }
  if (from.height_() != 0) {
    set_height_(from.height_());
  }
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  buf__.Swap(&other->buf__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(width__, other->width__);
  swap(height__, other->height__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Image::GetTypeName() const {
  return "x3.Image";
}


// ===================================================================

void Enable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Enable::kTypeFieldNumber;
const int Enable::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Enable::Enable()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Enable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Enable)
}
Enable::Enable(const Enable& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  value__ = from.value__;
  // @@protoc_insertion_point(copy_constructor:x3.Enable)
}

void Enable::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__ = false;
}

Enable::~Enable() {
  // @@protoc_insertion_point(destructor:x3.Enable)
  SharedDtor();
}

void Enable::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Enable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Enable& Enable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Enable.base);
  return *internal_default_instance();
}


void Enable::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Enable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__ = false;
  _internal_metadata_.Clear();
}

bool Enable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Enable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Enable.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Enable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Enable)
  return false;
#undef DO_
}

void Enable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Enable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Enable.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // bool value_ = 2;
  if (this->value_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Enable)
}

size_t Enable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Enable)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // bool value_ = 2;
  if (this->value_() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Enable::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Enable*>(&from));
}

void Enable::MergeFrom(const Enable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Enable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_() != 0) {
    set_value_(from.value_());
  }
}

void Enable::CopyFrom(const Enable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Enable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Enable::IsInitialized() const {
  return true;
}

void Enable::Swap(Enable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Enable::InternalSwap(Enable* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value__, other->value__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Enable::GetTypeName() const {
  return "x3.Enable";
}


// ===================================================================

void Threshold::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Threshold::kTypeFieldNumber;
const int Threshold::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Threshold::Threshold()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Threshold.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Threshold)
}
Threshold::Threshold(const Threshold& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  value__ = from.value__;
  // @@protoc_insertion_point(copy_constructor:x3.Threshold)
}

void Threshold::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__ = 0;
}

Threshold::~Threshold() {
  // @@protoc_insertion_point(destructor:x3.Threshold)
  SharedDtor();
}

void Threshold::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Threshold::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Threshold& Threshold::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Threshold.base);
  return *internal_default_instance();
}


void Threshold::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Threshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__ = 0;
  _internal_metadata_.Clear();
}

bool Threshold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Threshold)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Threshold.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Threshold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Threshold)
  return false;
#undef DO_
}

void Threshold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Threshold)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Threshold.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // float value_ = 2;
  if (this->value_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Threshold)
}

size_t Threshold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Threshold)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // float value_ = 2;
  if (this->value_() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Threshold::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Threshold*>(&from));
}

void Threshold::MergeFrom(const Threshold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Threshold)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_() != 0) {
    set_value_(from.value_());
  }
}

void Threshold::CopyFrom(const Threshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Threshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Threshold::IsInitialized() const {
  return true;
}

void Threshold::Swap(Threshold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Threshold::InternalSwap(Threshold* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value__, other->value__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Threshold::GetTypeName() const {
  return "x3.Threshold";
}


// ===================================================================

void Mode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mode::kTypeFieldNumber;
const int Mode::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mode::Mode()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Mode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Mode)
}
Mode::Mode(const Mode& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  value__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_().size() > 0) {
    value__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.Mode)
}

void Mode::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Mode::~Mode() {
  // @@protoc_insertion_point(destructor:x3.Mode)
  SharedDtor();
}

void Mode::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Mode& Mode::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Mode.base);
  return *internal_default_instance();
}


void Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Mode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Mode.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_().data(), static_cast<int>(this->value_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Mode.value_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Mode)
  return false;
#undef DO_
}

void Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Mode.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // string value_ = 2;
  if (this->value_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_().data(), static_cast<int>(this->value_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Mode.value_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Mode)
}

size_t Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Mode)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // string value_ = 2;
  if (this->value_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mode::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Mode*>(&from));
}

void Mode::MergeFrom(const Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_().size() > 0) {

    value__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value__);
  }
}

void Mode::CopyFrom(const Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mode::IsInitialized() const {
  return true;
}

void Mode::Swap(Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mode::InternalSwap(Mode* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value__.Swap(&other->value__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Mode::GetTypeName() const {
  return "x3.Mode";
}


// ===================================================================

void Target::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Target::kTypeFieldNumber;
const int Target::kTrackIdFieldNumber;
const int Target::kImgsFieldNumber;
const int Target::kSubTargetsFieldNumber;
const int Target::kBoxesFieldNumber;
const int Target::kAttributesFieldNumber;
const int Target::kPointsFieldNumber;
const int Target::kFloatArraysFieldNumber;
const int Target::kFloatMatrixsFieldNumber;
const int Target::kCharArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Target::Target()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Target.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Target)
}
Target::Target(const Target& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      imgs__(from.imgs__),
      sub_targets__(from.sub_targets__),
      boxes__(from.boxes__),
      attributes__(from.attributes__),
      points__(from.points__),
      float_arrays__(from.float_arrays__),
      float_matrixs__(from.float_matrixs__),
      char_arrays__(from.char_arrays__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  track_id__ = from.track_id__;
  // @@protoc_insertion_point(copy_constructor:x3.Target)
}

void Target::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
}

Target::~Target() {
  // @@protoc_insertion_point(destructor:x3.Target)
  SharedDtor();
}

void Target::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Target::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Target& Target::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Target.base);
  return *internal_default_instance();
}


void Target::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgs__.Clear();
  sub_targets__.Clear();
  boxes__.Clear();
  attributes__.Clear();
  points__.Clear();
  float_arrays__.Clear();
  float_matrixs__.Clear();
  char_arrays__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Target)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Target.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 track_id_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Image imgs_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_imgs_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Target sub_targets_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sub_targets_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Box boxes_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boxes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Attributes attributes_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Points points_ = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.FloatArray float_arrays_ = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_float_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.FloatMatrix float_matrixs_ = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_float_matrixs_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.CharArray char_arrays_ = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_char_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Target)
  return false;
#undef DO_
}

void Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Target.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->track_id_(), output);
  }

  // repeated .x3.Image imgs_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->imgs__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->imgs_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Target sub_targets_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sub_targets__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->sub_targets_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Box boxes_ = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boxes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->boxes_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Attributes attributes_ = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->attributes_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Points points_ = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->points_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.FloatArray float_arrays_ = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8,
      this->float_arrays_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.FloatMatrix float_matrixs_ = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_matrixs__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      9,
      this->float_matrixs_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.CharArray char_arrays_ = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->char_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10,
      this->char_arrays_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Target)
}

size_t Target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Target)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Image imgs_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->imgs__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->imgs_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Target sub_targets_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->sub_targets__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sub_targets_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Box boxes_ = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->boxes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boxes_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Attributes attributes_ = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Points points_ = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->points__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points_(static_cast<int>(i)));
    }
  }

  // repeated .x3.FloatArray float_arrays_ = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->float_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->float_arrays_(static_cast<int>(i)));
    }
  }

  // repeated .x3.FloatMatrix float_matrixs_ = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->float_matrixs__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->float_matrixs_(static_cast<int>(i)));
    }
  }

  // repeated .x3.CharArray char_arrays_ = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->char_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->char_arrays_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Target::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Target*>(&from));
}

void Target::MergeFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Target)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imgs__.MergeFrom(from.imgs__);
  sub_targets__.MergeFrom(from.sub_targets__);
  boxes__.MergeFrom(from.boxes__);
  attributes__.MergeFrom(from.attributes__);
  points__.MergeFrom(from.points__);
  float_arrays__.MergeFrom(from.float_arrays__);
  float_matrixs__.MergeFrom(from.float_matrixs__);
  char_arrays__.MergeFrom(from.char_arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.track_id_() != 0) {
    set_track_id_(from.track_id_());
  }
}

void Target::CopyFrom(const Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Target::IsInitialized() const {
  return true;
}

void Target::Swap(Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Target::InternalSwap(Target* other) {
  using std::swap;
  CastToBase(&imgs__)->InternalSwap(CastToBase(&other->imgs__));
  CastToBase(&sub_targets__)->InternalSwap(CastToBase(&other->sub_targets__));
  CastToBase(&boxes__)->InternalSwap(CastToBase(&other->boxes__));
  CastToBase(&attributes__)->InternalSwap(CastToBase(&other->attributes__));
  CastToBase(&points__)->InternalSwap(CastToBase(&other->points__));
  CastToBase(&float_arrays__)->InternalSwap(CastToBase(&other->float_arrays__));
  CastToBase(&float_matrixs__)->InternalSwap(CastToBase(&other->float_matrixs__));
  CastToBase(&char_arrays__)->InternalSwap(CastToBase(&other->char_arrays__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(track_id__, other->track_id__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Target::GetTypeName() const {
  return "x3.Target";
}


// ===================================================================

void SmartFrameMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmartFrameMessage::kTimestampFieldNumber;
const int SmartFrameMessage::kErrorCodeFieldNumber;
const int SmartFrameMessage::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmartFrameMessage::SmartFrameMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_SmartFrameMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.SmartFrameMessage)
}
SmartFrameMessage::SmartFrameMessage(const SmartFrameMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      targets__(from.targets__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp__, &from.timestamp__,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code__) -
    reinterpret_cast<char*>(&timestamp__)) + sizeof(error_code__));
  // @@protoc_insertion_point(copy_constructor:x3.SmartFrameMessage)
}

void SmartFrameMessage::SharedCtor() {
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(error_code__));
}

SmartFrameMessage::~SmartFrameMessage() {
  // @@protoc_insertion_point(destructor:x3.SmartFrameMessage)
  SharedDtor();
}

void SmartFrameMessage::SharedDtor() {
}

void SmartFrameMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SmartFrameMessage& SmartFrameMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_SmartFrameMessage.base);
  return *internal_default_instance();
}


void SmartFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.SmartFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets__.Clear();
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(error_code__));
  _internal_metadata_.Clear();
}

bool SmartFrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.SmartFrameMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed64 timestamp_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 error_code_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Target targets_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_targets_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.SmartFrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.SmartFrameMessage)
  return false;
#undef DO_
}

void SmartFrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.SmartFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed64 timestamp_ = 1;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->timestamp_(), output);
  }

  // uint32 error_code_ = 2;
  if (this->error_code_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code_(), output);
  }

  // repeated .x3.Target targets_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->targets_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.SmartFrameMessage)
}

size_t SmartFrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.SmartFrameMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Target targets_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->targets__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets_(static_cast<int>(i)));
    }
  }

  // fixed64 timestamp_ = 1;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  // uint32 error_code_ = 2;
  if (this->error_code_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartFrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SmartFrameMessage*>(&from));
}

void SmartFrameMessage::MergeFrom(const SmartFrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.SmartFrameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets__.MergeFrom(from.targets__);
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.error_code_() != 0) {
    set_error_code_(from.error_code_());
  }
}

void SmartFrameMessage::CopyFrom(const SmartFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.SmartFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartFrameMessage::IsInitialized() const {
  return true;
}

void SmartFrameMessage::Swap(SmartFrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmartFrameMessage::InternalSwap(SmartFrameMessage* other) {
  using std::swap;
  CastToBase(&targets__)->InternalSwap(CastToBase(&other->targets__));
  swap(timestamp__, other->timestamp__);
  swap(error_code__, other->error_code__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string SmartFrameMessage::GetTypeName() const {
  return "x3.SmartFrameMessage";
}


// ===================================================================

void Capture::InitAsDefaultInstance() {
  ::x3::_Capture_default_instance_._instance.get_mutable()->img__ = const_cast< ::x3::Image*>(
      ::x3::Image::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Capture::kTypeFieldNumber;
const int Capture::kTimestampFieldNumber;
const int Capture::kImgFieldNumber;
const int Capture::kBoxesFieldNumber;
const int Capture::kAttributesFieldNumber;
const int Capture::kPointsFieldNumber;
const int Capture::kFloatArraysFieldNumber;
const int Capture::kCharArraysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Capture::Capture()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Capture.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Capture)
}
Capture::Capture(const Capture& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      boxes__(from.boxes__),
      attributes__(from.attributes__),
      points__(from.points__),
      float_arrays__(from.float_arrays__),
      char_arrays__(from.char_arrays__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_img_()) {
    img__ = new ::x3::Image(*from.img__);
  } else {
    img__ = NULL;
  }
  timestamp__ = from.timestamp__;
  // @@protoc_insertion_point(copy_constructor:x3.Capture)
}

void Capture::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&img__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp__) -
      reinterpret_cast<char*>(&img__)) + sizeof(timestamp__));
}

Capture::~Capture() {
  // @@protoc_insertion_point(destructor:x3.Capture)
  SharedDtor();
}

void Capture::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete img__;
}

void Capture::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Capture& Capture::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Capture.base);
  return *internal_default_instance();
}


void Capture::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Capture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boxes__.Clear();
  attributes__.Clear();
  points__.Clear();
  float_arrays__.Clear();
  char_arrays__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && img__ != NULL) {
    delete img__;
  }
  img__ = NULL;
  timestamp__ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Capture::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Capture)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Capture.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 timestamp_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Image img_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_img_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Box boxes_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boxes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Attributes attributes_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Points points_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.FloatArray float_arrays_ = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_float_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.CharArray char_arrays_ = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_char_arrays_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Capture)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Capture)
  return false;
#undef DO_
}

void Capture::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Capture)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Capture.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // fixed64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->timestamp_(), output);
  }

  // .x3.Image img_ = 3;
  if (this->has_img_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_img_(), output);
  }

  // repeated .x3.Box boxes_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boxes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->boxes_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Attributes attributes_ = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->attributes_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Points points_ = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->points_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.FloatArray float_arrays_ = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->float_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->float_arrays_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.CharArray char_arrays_ = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->char_arrays__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      8,
      this->char_arrays_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Capture)
}

size_t Capture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Capture)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Box boxes_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->boxes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boxes_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Attributes attributes_ = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Points points_ = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->points__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points_(static_cast<int>(i)));
    }
  }

  // repeated .x3.FloatArray float_arrays_ = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->float_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->float_arrays_(static_cast<int>(i)));
    }
  }

  // repeated .x3.CharArray char_arrays_ = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->char_arrays__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->char_arrays_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // .x3.Image img_ = 3;
  if (this->has_img_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *img__);
  }

  // fixed64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Capture::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Capture*>(&from));
}

void Capture::MergeFrom(const Capture& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Capture)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boxes__.MergeFrom(from.boxes__);
  attributes__.MergeFrom(from.attributes__);
  points__.MergeFrom(from.points__);
  float_arrays__.MergeFrom(from.float_arrays__);
  char_arrays__.MergeFrom(from.char_arrays__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_img_()) {
    mutable_img_()->::x3::Image::MergeFrom(from.img_());
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
}

void Capture::CopyFrom(const Capture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Capture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capture::IsInitialized() const {
  return true;
}

void Capture::Swap(Capture* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Capture::InternalSwap(Capture* other) {
  using std::swap;
  CastToBase(&boxes__)->InternalSwap(CastToBase(&other->boxes__));
  CastToBase(&attributes__)->InternalSwap(CastToBase(&other->attributes__));
  CastToBase(&points__)->InternalSwap(CastToBase(&other->points__));
  CastToBase(&float_arrays__)->InternalSwap(CastToBase(&other->float_arrays__));
  CastToBase(&char_arrays__)->InternalSwap(CastToBase(&other->char_arrays__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(img__, other->img__);
  swap(timestamp__, other->timestamp__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Capture::GetTypeName() const {
  return "x3.Capture";
}


// ===================================================================

void CaptureTarget::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptureTarget::kTypeFieldNumber;
const int CaptureTarget::kTrackIdFieldNumber;
const int CaptureTarget::kCapturesFieldNumber;
const int CaptureTarget::kDbResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptureTarget::CaptureTarget()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_CaptureTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.CaptureTarget)
}
CaptureTarget::CaptureTarget(const CaptureTarget& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      captures__(from.captures__),
      db_results__(from.db_results__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  track_id__ = from.track_id__;
  // @@protoc_insertion_point(copy_constructor:x3.CaptureTarget)
}

void CaptureTarget::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
}

CaptureTarget::~CaptureTarget() {
  // @@protoc_insertion_point(destructor:x3.CaptureTarget)
  SharedDtor();
}

void CaptureTarget::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CaptureTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptureTarget& CaptureTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_CaptureTarget.base);
  return *internal_default_instance();
}


void CaptureTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.CaptureTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  captures__.Clear();
  db_results__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  track_id__ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CaptureTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.CaptureTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.CaptureTarget.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 track_id_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &track_id__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Capture captures_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_captures_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.DBResult db_results_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_db_results_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.CaptureTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.CaptureTarget)
  return false;
#undef DO_
}

void CaptureTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.CaptureTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.CaptureTarget.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->track_id_(), output);
  }

  // repeated .x3.Capture captures_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->captures__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->captures_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.DBResult db_results_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->db_results__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->db_results_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.CaptureTarget)
}

size_t CaptureTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.CaptureTarget)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Capture captures_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->captures__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->captures_(static_cast<int>(i)));
    }
  }

  // repeated .x3.DBResult db_results_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->db_results__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->db_results_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 track_id_ = 2;
  if (this->track_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->track_id_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptureTarget::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CaptureTarget*>(&from));
}

void CaptureTarget::MergeFrom(const CaptureTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.CaptureTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  captures__.MergeFrom(from.captures__);
  db_results__.MergeFrom(from.db_results__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.track_id_() != 0) {
    set_track_id_(from.track_id_());
  }
}

void CaptureTarget::CopyFrom(const CaptureTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.CaptureTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureTarget::IsInitialized() const {
  return true;
}

void CaptureTarget::Swap(CaptureTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptureTarget::InternalSwap(CaptureTarget* other) {
  using std::swap;
  CastToBase(&captures__)->InternalSwap(CastToBase(&other->captures__));
  CastToBase(&db_results__)->InternalSwap(CastToBase(&other->db_results__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(track_id__, other->track_id__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CaptureTarget::GetTypeName() const {
  return "x3.CaptureTarget";
}


// ===================================================================

void CaptureFrameMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CaptureFrameMessage::kTargetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CaptureFrameMessage::CaptureFrameMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_CaptureFrameMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.CaptureFrameMessage)
}
CaptureFrameMessage::CaptureFrameMessage(const CaptureFrameMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      targets__(from.targets__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:x3.CaptureFrameMessage)
}

void CaptureFrameMessage::SharedCtor() {
}

CaptureFrameMessage::~CaptureFrameMessage() {
  // @@protoc_insertion_point(destructor:x3.CaptureFrameMessage)
  SharedDtor();
}

void CaptureFrameMessage::SharedDtor() {
}

void CaptureFrameMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CaptureFrameMessage& CaptureFrameMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_CaptureFrameMessage.base);
  return *internal_default_instance();
}


void CaptureFrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.CaptureFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets__.Clear();
  _internal_metadata_.Clear();
}

bool CaptureFrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.CaptureFrameMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .x3.CaptureTarget targets_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_targets_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.CaptureFrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.CaptureFrameMessage)
  return false;
#undef DO_
}

void CaptureFrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.CaptureFrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .x3.CaptureTarget targets_ = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->targets_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.CaptureFrameMessage)
}

size_t CaptureFrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.CaptureFrameMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.CaptureTarget targets_ = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->targets__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets_(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CaptureFrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CaptureFrameMessage*>(&from));
}

void CaptureFrameMessage::MergeFrom(const CaptureFrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.CaptureFrameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets__.MergeFrom(from.targets__);
}

void CaptureFrameMessage::CopyFrom(const CaptureFrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.CaptureFrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureFrameMessage::IsInitialized() const {
  return true;
}

void CaptureFrameMessage::Swap(CaptureFrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CaptureFrameMessage::InternalSwap(CaptureFrameMessage* other) {
  using std::swap;
  CastToBase(&targets__)->InternalSwap(CastToBase(&other->targets__));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string CaptureFrameMessage::GetTypeName() const {
  return "x3.CaptureFrameMessage";
}


// ===================================================================

void StatisticsMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatisticsMessage::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatisticsMessage::StatisticsMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_StatisticsMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.StatisticsMessage)
}
StatisticsMessage::StatisticsMessage(const StatisticsMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      attributes__(from.attributes__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:x3.StatisticsMessage)
}

void StatisticsMessage::SharedCtor() {
}

StatisticsMessage::~StatisticsMessage() {
  // @@protoc_insertion_point(destructor:x3.StatisticsMessage)
  SharedDtor();
}

void StatisticsMessage::SharedDtor() {
}

void StatisticsMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatisticsMessage& StatisticsMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_StatisticsMessage.base);
  return *internal_default_instance();
}


void StatisticsMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.StatisticsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes__.Clear();
  _internal_metadata_.Clear();
}

bool StatisticsMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.StatisticsMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .x3.Attributes attributes_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.StatisticsMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.StatisticsMessage)
  return false;
#undef DO_
}

void StatisticsMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.StatisticsMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .x3.Attributes attributes_ = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1,
      this->attributes_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.StatisticsMessage)
}

size_t StatisticsMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.StatisticsMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Attributes attributes_ = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes_(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatisticsMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StatisticsMessage*>(&from));
}

void StatisticsMessage::MergeFrom(const StatisticsMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.StatisticsMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes__.MergeFrom(from.attributes__);
}

void StatisticsMessage::CopyFrom(const StatisticsMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.StatisticsMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatisticsMessage::IsInitialized() const {
  return true;
}

void StatisticsMessage::Swap(StatisticsMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatisticsMessage::InternalSwap(StatisticsMessage* other) {
  using std::swap;
  CastToBase(&attributes__)->InternalSwap(CastToBase(&other->attributes__));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string StatisticsMessage::GetTypeName() const {
  return "x3.StatisticsMessage";
}


// ===================================================================

void FrameMessage::InitAsDefaultInstance() {
  ::x3::_FrameMessage_default_instance_._instance.get_mutable()->smart_msg__ = const_cast< ::x3::SmartFrameMessage*>(
      ::x3::SmartFrameMessage::internal_default_instance());
  ::x3::_FrameMessage_default_instance_._instance.get_mutable()->capture_msg__ = const_cast< ::x3::CaptureFrameMessage*>(
      ::x3::CaptureFrameMessage::internal_default_instance());
  ::x3::_FrameMessage_default_instance_._instance.get_mutable()->statistics_msg__ = const_cast< ::x3::StatisticsMessage*>(
      ::x3::StatisticsMessage::internal_default_instance());
  ::x3::_FrameMessage_default_instance_._instance.get_mutable()->img__ = const_cast< ::x3::Image*>(
      ::x3::Image::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameMessage::kSmartMsgFieldNumber;
const int FrameMessage::kCaptureMsgFieldNumber;
const int FrameMessage::kStatisticsMsgFieldNumber;
const int FrameMessage::kImgFieldNumber;
const int FrameMessage::kTimestampFieldNumber;
const int FrameMessage::kSequenceIdFieldNumber;
const int FrameMessage::kExtimgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameMessage::FrameMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_FrameMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.FrameMessage)
}
FrameMessage::FrameMessage(const FrameMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      extimgs__(from.extimgs__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_smart_msg_()) {
    smart_msg__ = new ::x3::SmartFrameMessage(*from.smart_msg__);
  } else {
    smart_msg__ = NULL;
  }
  if (from.has_capture_msg_()) {
    capture_msg__ = new ::x3::CaptureFrameMessage(*from.capture_msg__);
  } else {
    capture_msg__ = NULL;
  }
  if (from.has_statistics_msg_()) {
    statistics_msg__ = new ::x3::StatisticsMessage(*from.statistics_msg__);
  } else {
    statistics_msg__ = NULL;
  }
  if (from.has_img_()) {
    img__ = new ::x3::Image(*from.img__);
  } else {
    img__ = NULL;
  }
  ::memcpy(&timestamp__, &from.timestamp__,
    static_cast<size_t>(reinterpret_cast<char*>(&sequence_id__) -
    reinterpret_cast<char*>(&timestamp__)) + sizeof(sequence_id__));
  // @@protoc_insertion_point(copy_constructor:x3.FrameMessage)
}

void FrameMessage::SharedCtor() {
  ::memset(&smart_msg__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id__) -
      reinterpret_cast<char*>(&smart_msg__)) + sizeof(sequence_id__));
}

FrameMessage::~FrameMessage() {
  // @@protoc_insertion_point(destructor:x3.FrameMessage)
  SharedDtor();
}

void FrameMessage::SharedDtor() {
  if (this != internal_default_instance()) delete smart_msg__;
  if (this != internal_default_instance()) delete capture_msg__;
  if (this != internal_default_instance()) delete statistics_msg__;
  if (this != internal_default_instance()) delete img__;
}

void FrameMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameMessage& FrameMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_FrameMessage.base);
  return *internal_default_instance();
}


void FrameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.FrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extimgs__.Clear();
  if (GetArenaNoVirtual() == NULL && smart_msg__ != NULL) {
    delete smart_msg__;
  }
  smart_msg__ = NULL;
  if (GetArenaNoVirtual() == NULL && capture_msg__ != NULL) {
    delete capture_msg__;
  }
  capture_msg__ = NULL;
  if (GetArenaNoVirtual() == NULL && statistics_msg__ != NULL) {
    delete statistics_msg__;
  }
  statistics_msg__ = NULL;
  if (GetArenaNoVirtual() == NULL && img__ != NULL) {
    delete img__;
  }
  img__ = NULL;
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(sequence_id__));
  _internal_metadata_.Clear();
}

bool FrameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.FrameMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .x3.SmartFrameMessage smart_msg_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smart_msg_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.CaptureFrameMessage capture_msg_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capture_msg_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.StatisticsMessage Statistics_msg_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statistics_msg_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Image img_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_img_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 timestamp_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sequence_id_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Image extimgs_ = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_extimgs_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.FrameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.FrameMessage)
  return false;
#undef DO_
}

void FrameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.FrameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .x3.SmartFrameMessage smart_msg_ = 1;
  if (this->has_smart_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_smart_msg_(), output);
  }

  // .x3.CaptureFrameMessage capture_msg_ = 2;
  if (this->has_capture_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_capture_msg_(), output);
  }

  // .x3.StatisticsMessage Statistics_msg_ = 3;
  if (this->has_statistics_msg_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_statistics_msg_(), output);
  }

  // .x3.Image img_ = 4;
  if (this->has_img_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_img_(), output);
  }

  // fixed64 timestamp_ = 5;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(5, this->timestamp_(), output);
  }

  // uint64 sequence_id_ = 6;
  if (this->sequence_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->sequence_id_(), output);
  }

  // repeated .x3.Image extimgs_ = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extimgs__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->extimgs_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.FrameMessage)
}

size_t FrameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.FrameMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Image extimgs_ = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->extimgs__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extimgs_(static_cast<int>(i)));
    }
  }

  // .x3.SmartFrameMessage smart_msg_ = 1;
  if (this->has_smart_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *smart_msg__);
  }

  // .x3.CaptureFrameMessage capture_msg_ = 2;
  if (this->has_capture_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *capture_msg__);
  }

  // .x3.StatisticsMessage Statistics_msg_ = 3;
  if (this->has_statistics_msg_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *statistics_msg__);
  }

  // .x3.Image img_ = 4;
  if (this->has_img_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *img__);
  }

  // fixed64 timestamp_ = 5;
  if (this->timestamp_() != 0) {
    total_size += 1 + 8;
  }

  // uint64 sequence_id_ = 6;
  if (this->sequence_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const FrameMessage*>(&from));
}

void FrameMessage::MergeFrom(const FrameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.FrameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extimgs__.MergeFrom(from.extimgs__);
  if (from.has_smart_msg_()) {
    mutable_smart_msg_()->::x3::SmartFrameMessage::MergeFrom(from.smart_msg_());
  }
  if (from.has_capture_msg_()) {
    mutable_capture_msg_()->::x3::CaptureFrameMessage::MergeFrom(from.capture_msg_());
  }
  if (from.has_statistics_msg_()) {
    mutable_statistics_msg_()->::x3::StatisticsMessage::MergeFrom(from.statistics_msg_());
  }
  if (from.has_img_()) {
    mutable_img_()->::x3::Image::MergeFrom(from.img_());
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.sequence_id_() != 0) {
    set_sequence_id_(from.sequence_id_());
  }
}

void FrameMessage::CopyFrom(const FrameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.FrameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameMessage::IsInitialized() const {
  return true;
}

void FrameMessage::Swap(FrameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameMessage::InternalSwap(FrameMessage* other) {
  using std::swap;
  CastToBase(&extimgs__)->InternalSwap(CastToBase(&other->extimgs__));
  swap(smart_msg__, other->smart_msg__);
  swap(capture_msg__, other->capture_msg__);
  swap(statistics_msg__, other->statistics_msg__);
  swap(img__, other->img__);
  swap(timestamp__, other->timestamp__);
  swap(sequence_id__, other->sequence_id__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string FrameMessage::GetTypeName() const {
  return "x3.FrameMessage";
}


// ===================================================================

void Capability::InitAsDefaultInstance() {
  ::x3::_Capability_default_instance_._instance.get_mutable()->cap_array__ = const_cast< ::x3::Enable*>(
      ::x3::Enable::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Capability::kTypeFieldNumber;
const int Capability::kCapArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Capability::Capability()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Capability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Capability)
}
Capability::Capability(const Capability& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_cap_array_()) {
    cap_array__ = new ::x3::Enable(*from.cap_array__);
  } else {
    cap_array__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:x3.Capability)
}

void Capability::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cap_array__ = NULL;
}

Capability::~Capability() {
  // @@protoc_insertion_point(destructor:x3.Capability)
  SharedDtor();
}

void Capability::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cap_array__;
}

void Capability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Capability& Capability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Capability.base);
  return *internal_default_instance();
}


void Capability::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Capability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cap_array__ != NULL) {
    delete cap_array__;
  }
  cap_array__ = NULL;
  _internal_metadata_.Clear();
}

bool Capability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Capability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Capability.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Enable cap_array_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cap_array_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Capability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Capability)
  return false;
#undef DO_
}

void Capability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Capability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Capability.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // .x3.Enable cap_array_ = 2;
  if (this->has_cap_array_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_cap_array_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Capability)
}

size_t Capability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Capability)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // .x3.Enable cap_array_ = 2;
  if (this->has_cap_array_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cap_array__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Capability::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Capability*>(&from));
}

void Capability::MergeFrom(const Capability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Capability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.has_cap_array_()) {
    mutable_cap_array_()->::x3::Enable::MergeFrom(from.cap_array_());
  }
}

void Capability::CopyFrom(const Capability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Capability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capability::IsInitialized() const {
  return true;
}

void Capability::Swap(Capability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Capability::InternalSwap(Capability* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cap_array__, other->cap_array__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Capability::GetTypeName() const {
  return "x3.Capability";
}


// ===================================================================

void Version::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kTypeFieldNumber;
const int Version::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Version.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Version)
}
Version::Version(const Version& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  value__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_().size() > 0) {
    value__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.Version)
}

void Version::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:x3.Version)
  SharedDtor();
}

void Version::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Version& Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Version.base);
  return *internal_default_instance();
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Version.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_().data(), static_cast<int>(this->value_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Version.value_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Version)
  return false;
#undef DO_
}

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Version.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // string value_ = 2;
  if (this->value_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_().data(), static_cast<int>(this->value_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Version.value_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Version)
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Version)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // string value_ = 2;
  if (this->value_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Version*>(&from));
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.value_().size() > 0) {

    value__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value__);
  }
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value__.Swap(&other->value__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Version::GetTypeName() const {
  return "x3.Version";
}


// ===================================================================

void Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kTypeFieldNumber;
const int Config::kThresholdFieldNumber;
const int Config::kModeFieldNumber;
const int Config::kShieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      threshold__(from.threshold__),
      mode__(from.mode__),
      shield__(from.shield__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  // @@protoc_insertion_point(copy_constructor:x3.Config)
}

void Config::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:x3.Config)
  SharedDtor();
}

void Config::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Config& Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Config.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  threshold__.Clear();
  mode__.Clear();
  shield__.Clear();
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Config.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Threshold threshold_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_threshold_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Mode mode_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mode_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Box shield_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_shield_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Config.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // repeated .x3.Threshold threshold_ = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->threshold__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2,
      this->threshold_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Mode mode_ = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mode__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3,
      this->mode_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Box shield_ = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shield__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4,
      this->shield_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Config)
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Config)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Threshold threshold_ = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->threshold__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->threshold_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Mode mode_ = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mode__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mode_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Box shield_ = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->shield__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shield_(static_cast<int>(i)));
    }
  }

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Config*>(&from));
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  threshold__.MergeFrom(from.threshold__);
  mode__.MergeFrom(from.mode__);
  shield__.MergeFrom(from.shield__);
  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  using std::swap;
  CastToBase(&threshold__)->InternalSwap(CastToBase(&other->threshold__));
  CastToBase(&mode__)->InternalSwap(CastToBase(&other->mode__));
  CastToBase(&shield__)->InternalSwap(CastToBase(&other->shield__));
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Config::GetTypeName() const {
  return "x3.Config";
}


// ===================================================================

void Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Status::kTypeFieldNumber;
const int Status::kTimestampFieldNumber;
const int Status::kRunStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Status::Status()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Status)
}
Status::Status(const Status& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  ::memcpy(&timestamp__, &from.timestamp__,
    static_cast<size_t>(reinterpret_cast<char*>(&run_status__) -
    reinterpret_cast<char*>(&timestamp__)) + sizeof(run_status__));
  // @@protoc_insertion_point(copy_constructor:x3.Status)
}

void Status::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&run_status__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(run_status__));
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:x3.Status)
  SharedDtor();
}

void Status::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Status& Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Status.base);
  return *internal_default_instance();
}


void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&run_status__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(run_status__));
  _internal_metadata_.Clear();
}

bool Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Status.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Status.RunStatus run_status_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_run_status_(static_cast< ::x3::Status_RunStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Status)
  return false;
#undef DO_
}

void Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Status.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp_(), output);
  }

  // .x3.Status.RunStatus run_status_ = 3;
  if (this->run_status_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->run_status_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Status)
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Status)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_());
  }

  // .x3.Status.RunStatus run_status_ = 3;
  if (this->run_status_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->run_status_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Status*>(&from));
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.run_status_() != 0) {
    set_run_status_(from.run_status_());
  }
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::Swap(Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Status::InternalSwap(Status* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp__, other->timestamp__);
  swap(run_status__, other->run_status__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Status::GetTypeName() const {
  return "x3.Status";
}


// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Command::kTypeFieldNumber;
const int Command::kTimestampFieldNumber;
const int Command::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Command.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  ::memcpy(&timestamp__, &from.timestamp__,
    static_cast<size_t>(reinterpret_cast<char*>(&order__) -
    reinterpret_cast<char*>(&timestamp__)) + sizeof(order__));
  // @@protoc_insertion_point(copy_constructor:x3.Command)
}

void Command::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(order__));
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:x3.Command)
  SharedDtor();
}

void Command::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Command& Command::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Command.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(order__));
  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Command)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Command.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Command.Order order_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_order_(static_cast< ::x3::Command_Order >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Command.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp_(), output);
  }

  // .x3.Command.Order order_ = 3;
  if (this->order_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->order_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Command)
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Command)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_());
  }

  // .x3.Command.Order order_ = 3;
  if (this->order_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->order_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Command*>(&from));
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.order_() != 0) {
    set_order_(from.order_());
  }
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp__, other->timestamp__);
  swap(order__, other->order__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Command::GetTypeName() const {
  return "x3.Command";
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kTypeFieldNumber;
const int Response::kTimestampFieldNumber;
const int Response::kAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  ::memcpy(&timestamp__, &from.timestamp__,
    static_cast<size_t>(reinterpret_cast<char*>(&ack__) -
    reinterpret_cast<char*>(&timestamp__)) + sizeof(ack__));
  // @@protoc_insertion_point(copy_constructor:x3.Response)
}

void Response::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ack__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(ack__));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:x3.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ack__) -
      reinterpret_cast<char*>(&timestamp__)) + sizeof(ack__));
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.Response.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Response.Ack ack_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ack_(static_cast< ::x3::Response_Ack >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.Response.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp_(), output);
  }

  // .x3.Response.Ack ack_ = 3;
  if (this->ack_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ack_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Response)
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Response)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_());
  }

  // .x3.Response.Ack ack_ = 3;
  if (this->ack_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ack_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response*>(&from));
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.ack_() != 0) {
    set_ack_(from.ack_());
  }
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp__, other->timestamp__);
  swap(ack__, other->ack__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Response::GetTypeName() const {
  return "x3.Response";
}


// ===================================================================

void LogLevel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogLevel::kTypeFieldNumber;
const int LogLevel::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogLevel::LogLevel()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_LogLevel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.LogLevel)
}
LogLevel::LogLevel(const LogLevel& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_().size() > 0) {
    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  level__ = from.level__;
  // @@protoc_insertion_point(copy_constructor:x3.LogLevel)
}

void LogLevel::SharedCtor() {
  type__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level__ = 0;
}

LogLevel::~LogLevel() {
  // @@protoc_insertion_point(destructor:x3.LogLevel)
  SharedDtor();
}

void LogLevel::SharedDtor() {
  type__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogLevel& LogLevel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_LogLevel.base);
  return *internal_default_instance();
}


void LogLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.LogLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level__ = 0;
  _internal_metadata_.Clear();
}

bool LogLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.LogLevel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_().data(), static_cast<int>(this->type_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "x3.LogLevel.type_"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.LogLevel.Level level_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_level_(static_cast< ::x3::LogLevel_Level >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.LogLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.LogLevel)
  return false;
#undef DO_
}

void LogLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.LogLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type_ = 1;
  if (this->type_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_().data(), static_cast<int>(this->type_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "x3.LogLevel.type_");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type_(), output);
  }

  // .x3.LogLevel.Level level_ = 2;
  if (this->level_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->level_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.LogLevel)
}

size_t LogLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.LogLevel)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string type_ = 1;
  if (this->type_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_());
  }

  // .x3.LogLevel.Level level_ = 2;
  if (this->level_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->level_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogLevel::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LogLevel*>(&from));
}

void LogLevel::MergeFrom(const LogLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.LogLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_().size() > 0) {

    type__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type__);
  }
  if (from.level_() != 0) {
    set_level_(from.level_());
  }
}

void LogLevel::CopyFrom(const LogLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.LogLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogLevel::IsInitialized() const {
  return true;
}

void LogLevel::Swap(LogLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogLevel::InternalSwap(LogLevel* other) {
  using std::swap;
  type__.Swap(&other->type__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(level__, other->level__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string LogLevel::GetTypeName() const {
  return "x3.LogLevel";
}


// ===================================================================

void InfoMessage::InitAsDefaultInstance() {
  ::x3::_InfoMessage_default_instance_._instance.get_mutable()->status__ = const_cast< ::x3::Status*>(
      ::x3::Status::internal_default_instance());
  ::x3::_InfoMessage_default_instance_._instance.get_mutable()->command__ = const_cast< ::x3::Command*>(
      ::x3::Command::internal_default_instance());
  ::x3::_InfoMessage_default_instance_._instance.get_mutable()->loglevel__ = const_cast< ::x3::LogLevel*>(
      ::x3::LogLevel::internal_default_instance());
  ::x3::_InfoMessage_default_instance_._instance.get_mutable()->response__ = const_cast< ::x3::Response*>(
      ::x3::Response::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoMessage::kStatusFieldNumber;
const int InfoMessage::kCommandFieldNumber;
const int InfoMessage::kLoglevelFieldNumber;
const int InfoMessage::kResponseFieldNumber;
const int InfoMessage::kConfigFieldNumber;
const int InfoMessage::kVersionFieldNumber;
const int InfoMessage::kCapabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoMessage::InfoMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_InfoMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.InfoMessage)
}
InfoMessage::InfoMessage(const InfoMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      config__(from.config__),
      version__(from.version__),
      capability__(from.capability__) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status_()) {
    status__ = new ::x3::Status(*from.status__);
  } else {
    status__ = NULL;
  }
  if (from.has_command_()) {
    command__ = new ::x3::Command(*from.command__);
  } else {
    command__ = NULL;
  }
  if (from.has_loglevel_()) {
    loglevel__ = new ::x3::LogLevel(*from.loglevel__);
  } else {
    loglevel__ = NULL;
  }
  if (from.has_response_()) {
    response__ = new ::x3::Response(*from.response__);
  } else {
    response__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:x3.InfoMessage)
}

void InfoMessage::SharedCtor() {
  ::memset(&status__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response__) -
      reinterpret_cast<char*>(&status__)) + sizeof(response__));
}

InfoMessage::~InfoMessage() {
  // @@protoc_insertion_point(destructor:x3.InfoMessage)
  SharedDtor();
}

void InfoMessage::SharedDtor() {
  if (this != internal_default_instance()) delete status__;
  if (this != internal_default_instance()) delete command__;
  if (this != internal_default_instance()) delete loglevel__;
  if (this != internal_default_instance()) delete response__;
}

void InfoMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InfoMessage& InfoMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_InfoMessage.base);
  return *internal_default_instance();
}


void InfoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.InfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config__.Clear();
  version__.Clear();
  capability__.Clear();
  if (GetArenaNoVirtual() == NULL && status__ != NULL) {
    delete status__;
  }
  status__ = NULL;
  if (GetArenaNoVirtual() == NULL && command__ != NULL) {
    delete command__;
  }
  command__ = NULL;
  if (GetArenaNoVirtual() == NULL && loglevel__ != NULL) {
    delete loglevel__;
  }
  loglevel__ = NULL;
  if (GetArenaNoVirtual() == NULL && response__ != NULL) {
    delete response__;
  }
  response__ = NULL;
  _internal_metadata_.Clear();
}

bool InfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.InfoMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .x3.Status status_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Command command_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_command_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.LogLevel loglevel_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loglevel_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Response response_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Config config_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_config_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Version version_ = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_version_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .x3.Capability capability_ = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_capability_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.InfoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.InfoMessage)
  return false;
#undef DO_
}

void InfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.InfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .x3.Status status_ = 1;
  if (this->has_status_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_status_(), output);
  }

  // .x3.Command command_ = 2;
  if (this->has_command_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_command_(), output);
  }

  // .x3.LogLevel loglevel_ = 3;
  if (this->has_loglevel_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_loglevel_(), output);
  }

  // .x3.Response response_ = 4;
  if (this->has_response_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->_internal_response_(), output);
  }

  // repeated .x3.Config config_ = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5,
      this->config_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Version version_ = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->version__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6,
      this->version_(static_cast<int>(i)),
      output);
  }

  // repeated .x3.Capability capability_ = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->capability__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      7,
      this->capability_(static_cast<int>(i)),
      output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.InfoMessage)
}

size_t InfoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.InfoMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .x3.Config config_ = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->config__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->config_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Version version_ = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->version__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->version_(static_cast<int>(i)));
    }
  }

  // repeated .x3.Capability capability_ = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->capability__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->capability_(static_cast<int>(i)));
    }
  }

  // .x3.Status status_ = 1;
  if (this->has_status_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status__);
  }

  // .x3.Command command_ = 2;
  if (this->has_command_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *command__);
  }

  // .x3.LogLevel loglevel_ = 3;
  if (this->has_loglevel_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loglevel__);
  }

  // .x3.Response response_ = 4;
  if (this->has_response_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *response__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const InfoMessage*>(&from));
}

void InfoMessage::MergeFrom(const InfoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.InfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config__.MergeFrom(from.config__);
  version__.MergeFrom(from.version__);
  capability__.MergeFrom(from.capability__);
  if (from.has_status_()) {
    mutable_status_()->::x3::Status::MergeFrom(from.status_());
  }
  if (from.has_command_()) {
    mutable_command_()->::x3::Command::MergeFrom(from.command_());
  }
  if (from.has_loglevel_()) {
    mutable_loglevel_()->::x3::LogLevel::MergeFrom(from.loglevel_());
  }
  if (from.has_response_()) {
    mutable_response_()->::x3::Response::MergeFrom(from.response_());
  }
}

void InfoMessage::CopyFrom(const InfoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.InfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoMessage::IsInitialized() const {
  return true;
}

void InfoMessage::Swap(InfoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoMessage::InternalSwap(InfoMessage* other) {
  using std::swap;
  CastToBase(&config__)->InternalSwap(CastToBase(&other->config__));
  CastToBase(&version__)->InternalSwap(CastToBase(&other->version__));
  CastToBase(&capability__)->InternalSwap(CastToBase(&other->capability__));
  swap(status__, other->status__);
  swap(command__, other->command__);
  swap(loglevel__, other->loglevel__);
  swap(response__, other->response__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string InfoMessage::GetTypeName() const {
  return "x3.InfoMessage";
}


// ===================================================================

void Frame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frame::kSequenceIdFieldNumber;
const int Frame::kTimestampFieldNumber;
const int Frame::kFrameTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frame::Frame()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Frame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Frame)
}
Frame::Frame(const Frame& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequence_id__, &from.sequence_id__,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_type__) -
    reinterpret_cast<char*>(&sequence_id__)) + sizeof(frame_type__));
  // @@protoc_insertion_point(copy_constructor:x3.Frame)
}

void Frame::SharedCtor() {
  ::memset(&sequence_id__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_type__) -
      reinterpret_cast<char*>(&sequence_id__)) + sizeof(frame_type__));
}

Frame::~Frame() {
  // @@protoc_insertion_point(destructor:x3.Frame)
  SharedDtor();
}

void Frame::SharedDtor() {
}

void Frame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Frame& Frame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Frame.base);
  return *internal_default_instance();
}


void Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sequence_id__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_type__) -
      reinterpret_cast<char*>(&sequence_id__)) + sizeof(frame_type__));
  _internal_metadata_.Clear();
}

bool Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Frame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Frame.FrameType frame_type_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_frame_type_(static_cast< ::x3::Frame_FrameType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Frame)
  return false;
#undef DO_
}

void Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Frame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id_ = 1;
  if (this->sequence_id_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id_(), output);
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp_(), output);
  }

  // .x3.Frame.FrameType frame_type_ = 3;
  if (this->frame_type_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->frame_type_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Frame)
}

size_t Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Frame)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint64 sequence_id_ = 1;
  if (this->sequence_id_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id_());
  }

  // uint64 timestamp_ = 2;
  if (this->timestamp_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_());
  }

  // .x3.Frame.FrameType frame_type_ = 3;
  if (this->frame_type_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->frame_type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Frame::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Frame*>(&from));
}

void Frame::MergeFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Frame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sequence_id_() != 0) {
    set_sequence_id_(from.sequence_id_());
  }
  if (from.timestamp_() != 0) {
    set_timestamp_(from.timestamp_());
  }
  if (from.frame_type_() != 0) {
    set_frame_type_(from.frame_type_());
  }
}

void Frame::CopyFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Frame::IsInitialized() const {
  return true;
}

void Frame::Swap(Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frame::InternalSwap(Frame* other) {
  using std::swap;
  swap(sequence_id__, other->sequence_id__);
  swap(timestamp__, other->timestamp__);
  swap(frame_type__, other->frame_type__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Frame::GetTypeName() const {
  return "x3.Frame";
}


// ===================================================================

void Check::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Check::kMd5SumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Check::Check()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Check.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Check)
}
Check::Check(const Check& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      md5sum_(from.md5sum_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:x3.Check)
}

void Check::SharedCtor() {
}

Check::~Check() {
  // @@protoc_insertion_point(destructor:x3.Check)
  SharedDtor();
}

void Check::SharedDtor() {
}

void Check::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Check& Check::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Check.base);
  return *internal_default_instance();
}


void Check::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Check)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  md5sum_.Clear();
  _internal_metadata_.Clear();
}

bool Check::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Check)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes md5sum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_md5sum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Check)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Check)
  return false;
#undef DO_
}

void Check::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Check)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes md5sum = 1;
  for (int i = 0, n = this->md5sum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->md5sum(i), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Check)
}

size_t Check::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Check)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated bytes md5sum = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->md5sum_size());
  for (int i = 0, n = this->md5sum_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->md5sum(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Check::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Check*>(&from));
}

void Check::MergeFrom(const Check& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Check)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  md5sum_.MergeFrom(from.md5sum_);
}

void Check::CopyFrom(const Check& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Check)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Check::IsInitialized() const {
  return true;
}

void Check::Swap(Check* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Check::InternalSwap(Check* other) {
  using std::swap;
  md5sum_.InternalSwap(CastToBase(&other->md5sum_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Check::GetTypeName() const {
  return "x3.Check";
}


// ===================================================================

void Addition::InitAsDefaultInstance() {
  ::x3::_Addition_default_instance_._instance.get_mutable()->check__ = const_cast< ::x3::Check*>(
      ::x3::Check::internal_default_instance());
  ::x3::_Addition_default_instance_._instance.get_mutable()->frame__ = const_cast< ::x3::Frame*>(
      ::x3::Frame::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Addition::kCheckFieldNumber;
const int Addition::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Addition::Addition()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_Addition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.Addition)
}
Addition::Addition(const Addition& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_check_()) {
    check__ = new ::x3::Check(*from.check__);
  } else {
    check__ = NULL;
  }
  if (from.has_frame_()) {
    frame__ = new ::x3::Frame(*from.frame__);
  } else {
    frame__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:x3.Addition)
}

void Addition::SharedCtor() {
  ::memset(&check__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame__) -
      reinterpret_cast<char*>(&check__)) + sizeof(frame__));
}

Addition::~Addition() {
  // @@protoc_insertion_point(destructor:x3.Addition)
  SharedDtor();
}

void Addition::SharedDtor() {
  if (this != internal_default_instance()) delete check__;
  if (this != internal_default_instance()) delete frame__;
}

void Addition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Addition& Addition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_Addition.base);
  return *internal_default_instance();
}


void Addition::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.Addition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && check__ != NULL) {
    delete check__;
  }
  check__ = NULL;
  if (GetArenaNoVirtual() == NULL && frame__ != NULL) {
    delete frame__;
  }
  frame__ = NULL;
  _internal_metadata_.Clear();
}

bool Addition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.Addition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .x3.Check check_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_check_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Frame frame_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frame_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.Addition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.Addition)
  return false;
#undef DO_
}

void Addition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.Addition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .x3.Check check_ = 1;
  if (this->has_check_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->_internal_check_(), output);
  }

  // .x3.Frame frame_ = 2;
  if (this->has_frame_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->_internal_frame_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.Addition)
}

size_t Addition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.Addition)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .x3.Check check_ = 1;
  if (this->has_check_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *check__);
  }

  // .x3.Frame frame_ = 2;
  if (this->has_frame_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frame__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Addition::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Addition*>(&from));
}

void Addition::MergeFrom(const Addition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.Addition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_check_()) {
    mutable_check_()->::x3::Check::MergeFrom(from.check_());
  }
  if (from.has_frame_()) {
    mutable_frame_()->::x3::Frame::MergeFrom(from.frame_());
  }
}

void Addition::CopyFrom(const Addition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.Addition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Addition::IsInitialized() const {
  return true;
}

void Addition::Swap(Addition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Addition::InternalSwap(Addition* other) {
  using std::swap;
  swap(check__, other->check__);
  swap(frame__, other->frame__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string Addition::GetTypeName() const {
  return "x3.Addition";
}


// ===================================================================

void MessagePack::InitAsDefaultInstance() {
  ::x3::_MessagePack_default_instance_._instance.get_mutable()->addition__ = const_cast< ::x3::Addition*>(
      ::x3::Addition::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePack::kFlowFieldNumber;
const int MessagePack::kTypeFieldNumber;
const int MessagePack::kAdditionFieldNumber;
const int MessagePack::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePack::MessagePack()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fx3_2eproto::scc_info_MessagePack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:x3.MessagePack)
}
MessagePack::MessagePack(const MessagePack& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content_().size() > 0) {
    content__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content__);
  }
  if (from.has_addition_()) {
    addition__ = new ::x3::Addition(*from.addition__);
  } else {
    addition__ = NULL;
  }
  ::memcpy(&flow__, &from.flow__,
    static_cast<size_t>(reinterpret_cast<char*>(&type__) -
    reinterpret_cast<char*>(&flow__)) + sizeof(type__));
  // @@protoc_insertion_point(copy_constructor:x3.MessagePack)
}

void MessagePack::SharedCtor() {
  content__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&addition__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type__) -
      reinterpret_cast<char*>(&addition__)) + sizeof(type__));
}

MessagePack::~MessagePack() {
  // @@protoc_insertion_point(destructor:x3.MessagePack)
  SharedDtor();
}

void MessagePack::SharedDtor() {
  content__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete addition__;
}

void MessagePack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessagePack& MessagePack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fx3_2eproto::scc_info_MessagePack.base);
  return *internal_default_instance();
}


void MessagePack::Clear() {
// @@protoc_insertion_point(message_clear_start:x3.MessagePack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && addition__ != NULL) {
    delete addition__;
  }
  addition__ = NULL;
  ::memset(&flow__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type__) -
      reinterpret_cast<char*>(&flow__)) + sizeof(type__));
  _internal_metadata_.Clear();
}

bool MessagePack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:x3.MessagePack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .x3.MessagePack.Flow flow_ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_flow_(static_cast< ::x3::MessagePack_Flow >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.MessagePack.Type type_ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type_(static_cast< ::x3::MessagePack_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .x3.Addition addition_ = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_addition_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content_ = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:x3.MessagePack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:x3.MessagePack)
  return false;
#undef DO_
}

void MessagePack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:x3.MessagePack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .x3.MessagePack.Flow flow_ = 1;
  if (this->flow_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->flow_(), output);
  }

  // .x3.MessagePack.Type type_ = 2;
  if (this->type_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type_(), output);
  }

  // .x3.Addition addition_ = 3;
  if (this->has_addition_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->_internal_addition_(), output);
  }

  // bytes content_ = 4;
  if (this->content_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content_(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:x3.MessagePack)
}

size_t MessagePack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:x3.MessagePack)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // bytes content_ = 4;
  if (this->content_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content_());
  }

  // .x3.Addition addition_ = 3;
  if (this->has_addition_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *addition__);
  }

  // .x3.MessagePack.Flow flow_ = 1;
  if (this->flow_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->flow_());
  }

  // .x3.MessagePack.Type type_ = 2;
  if (this->type_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagePack::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MessagePack*>(&from));
}

void MessagePack::MergeFrom(const MessagePack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:x3.MessagePack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content_().size() > 0) {

    content__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content__);
  }
  if (from.has_addition_()) {
    mutable_addition_()->::x3::Addition::MergeFrom(from.addition_());
  }
  if (from.flow_() != 0) {
    set_flow_(from.flow_());
  }
  if (from.type_() != 0) {
    set_type_(from.type_());
  }
}

void MessagePack::CopyFrom(const MessagePack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:x3.MessagePack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePack::IsInitialized() const {
  return true;
}

void MessagePack::Swap(MessagePack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePack::InternalSwap(MessagePack* other) {
  using std::swap;
  content__.Swap(&other->content__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(addition__, other->addition__);
  swap(flow__, other->flow__);
  swap(type__, other->type__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MessagePack::GetTypeName() const {
  return "x3.MessagePack";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace x3
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::CharArray* Arena::CreateMaybeMessage< ::x3::CharArray >(Arena* arena) {
  return Arena::CreateInternal< ::x3::CharArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::FloatArray* Arena::CreateMaybeMessage< ::x3::FloatArray >(Arena* arena) {
  return Arena::CreateInternal< ::x3::FloatArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::FloatMatrix* Arena::CreateMaybeMessage< ::x3::FloatMatrix >(Arena* arena) {
  return Arena::CreateInternal< ::x3::FloatMatrix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Point* Arena::CreateMaybeMessage< ::x3::Point >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Points* Arena::CreateMaybeMessage< ::x3::Points >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Points >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Box* Arena::CreateMaybeMessage< ::x3::Box >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Attributes* Arena::CreateMaybeMessage< ::x3::Attributes >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Attributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::DBResult* Arena::CreateMaybeMessage< ::x3::DBResult >(Arena* arena) {
  return Arena::CreateInternal< ::x3::DBResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Image* Arena::CreateMaybeMessage< ::x3::Image >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Image >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Enable* Arena::CreateMaybeMessage< ::x3::Enable >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Enable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Threshold* Arena::CreateMaybeMessage< ::x3::Threshold >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Threshold >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Mode* Arena::CreateMaybeMessage< ::x3::Mode >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Mode >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Target* Arena::CreateMaybeMessage< ::x3::Target >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Target >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::SmartFrameMessage* Arena::CreateMaybeMessage< ::x3::SmartFrameMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x3::SmartFrameMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Capture* Arena::CreateMaybeMessage< ::x3::Capture >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Capture >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::CaptureTarget* Arena::CreateMaybeMessage< ::x3::CaptureTarget >(Arena* arena) {
  return Arena::CreateInternal< ::x3::CaptureTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::CaptureFrameMessage* Arena::CreateMaybeMessage< ::x3::CaptureFrameMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x3::CaptureFrameMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::StatisticsMessage* Arena::CreateMaybeMessage< ::x3::StatisticsMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x3::StatisticsMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::FrameMessage* Arena::CreateMaybeMessage< ::x3::FrameMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x3::FrameMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Capability* Arena::CreateMaybeMessage< ::x3::Capability >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Capability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Version* Arena::CreateMaybeMessage< ::x3::Version >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Version >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Config* Arena::CreateMaybeMessage< ::x3::Config >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Config >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Status* Arena::CreateMaybeMessage< ::x3::Status >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Command* Arena::CreateMaybeMessage< ::x3::Command >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Response* Arena::CreateMaybeMessage< ::x3::Response >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::LogLevel* Arena::CreateMaybeMessage< ::x3::LogLevel >(Arena* arena) {
  return Arena::CreateInternal< ::x3::LogLevel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::InfoMessage* Arena::CreateMaybeMessage< ::x3::InfoMessage >(Arena* arena) {
  return Arena::CreateInternal< ::x3::InfoMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Frame* Arena::CreateMaybeMessage< ::x3::Frame >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Frame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Check* Arena::CreateMaybeMessage< ::x3::Check >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Check >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::Addition* Arena::CreateMaybeMessage< ::x3::Addition >(Arena* arena) {
  return Arena::CreateInternal< ::x3::Addition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::x3::MessagePack* Arena::CreateMaybeMessage< ::x3::MessagePack >(Arena* arena) {
  return Arena::CreateInternal< ::x3::MessagePack >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
